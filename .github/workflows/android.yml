# Builds, tests and publishes the output to the Play store internal track.
name: Android CI

on:
  push:
    branches:
      - master
    paths-ignore:
      - ".github/**"
      - "!.github/workflows/android.yml"
      - "*.md"
      - ".dependabot/**"
  pull_request:
    branches:
      - master
    paths-ignore:
      - ".github/**"
      - "!.github/workflows/android.yml"
      - "*.md"
      - ".dependabot/**"

jobs:
  build:
    name: Build
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - uses: burrunan/gradle-cache-action@v1
        name: Gradle cache
        with:
          build-root-directory: project/
      - name: Assemble
        run: ./gradlew assembleDebug --scan
        working-directory: project
        timeout-minutes: 10
  lint:
    name: "Lint"
    runs-on: macos-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - uses: burrunan/gradle-cache-action@v1
        name: Gradle cache
        with:
          build-root-directory: project/
      - name: Android Lint
        run: ./gradlew lint
        working-directory: project
        timeout-minutes: 10

  unit-test:
    name: "Unit test"
    runs-on: macos-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - uses: burrunan/gradle-cache-action@v1
        name: Gradle cache
        with:
          build-root-directory: project/
      - name: Run unit tests
        run: ./gradlew jacocoTestGmsDebugUnitTestReport
        working-directory: project
        timeout-minutes: 10
      - name: Upload unit test result artifact
        uses: actions/upload-artifact@v2
        with:
          name: unit-test-results
          path: project/app/build/test-results/testGmsDebugUnitTest/*.xml
        if: always()
      - name: Upload unit test coverage artifact
        uses: actions/upload-artifact@v2
        with:
          name: unit-test-coverage
          path: project/app/build/jacoco/jacoco.xml
        if: always()

  espresso-test-gms:
    name: "Espresso test GMS flavor"
    runs-on: macos-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - uses: burrunan/gradle-cache-action@v1
        name: Gradle cache
        with:
          build-root-directory: project/
      - name: Espresso Test for GMS flavor
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          working-directory: project
          script: |
            adb emu geo fix 0 51
            ./gradlew createGmsDebugCoverageReport
          profile: pixel_3a
          target: google_apis
          disable-animations: true
          arch: x86_64
          sdcard-path-or-size: 1000M
      - name: Upload gms connected test result artifact
        uses: actions/upload-artifact@v2
        with:
          name: gms-espresso-test-reports
          path: project/app/build/reports/androidTests/connected/flavors/gmsDebugAndroidTest/
        if: always()
      - name: Upload gms connected test XML
        uses: actions/upload-artifact@v2
        with:
          name: gms-espresso-test-xml
          path: project/app/build/outputs/androidTest-results/connected/flavors/gmsDebugAndroidTest/*.xml
      - name: Upload gms connected test coverage artifact
        uses: actions/upload-artifact@v2
        with:
          name: gms-espresso-test-coverage
          path: project/app/build/reports/coverage/gms/debug/report.xml
        if: always()
  espresso-test-oss:
    name: "Espresso test OSS flavor"
    runs-on: macos-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - uses: burrunan/gradle-cache-action@v1
        name: Gradle cache
        with:
          build-root-directory: project/
      - name: Espresso Test for OSS flavor
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          working-directory: project
          script: |
            adb emu geo fix 0 51
            ./gradlew createOssDebugCoverageReport
          profile: pixel_3a
          target: default
          disable-animations: true
          arch: x86_64
          sdcard-path-or-size: 1000M
      - name: Upload OSS connected test result artifact
        uses: actions/upload-artifact@v2
        with:
          name: oss-espresso-test-reports
          path: project/app/build/reports/androidTests/connected/flavors/ossDebugAndroidTest/
        if: always()
      - name: Upload OSS connected test XML
        uses: actions/upload-artifact@v2
        with:
          name: oss-espresso-test-xml
          path: project/app/build/outputs/androidTest-results/connected/flavors/ossDebugAndroidTest/*.xml
      - name: Upload OSS connected test coverage artifact
        uses: actions/upload-artifact@v2
        with:
          name: oss-espresso-test-coverage
          path: project/app/build/reports/coverage/oss/debug/report.xml
        if: always()
  publish-test-results:
    name: "Publish test results and coverage"
    runs-on: ubuntu-latest
    if: always()
    needs:
      - unit-test
      - espresso-test-gms
      - espresso-test-oss
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        name: "Download OSS Espresso test report"
        with:
          path: test-results/oss-espresso-test-xml
          name: oss-espresso-test-xml
      - uses: actions/download-artifact@v2
        name: "Download GMS Espresso test report"
        with:
          path: test-results/gms-espresso-test-xml
          name: gms-espresso-test-xml
      - uses: actions/download-artifact@v2
        name: "Download unit test report"
        with:
          path: test-results/unit-test-results
          name: unit-test-results
      - run: find test-results
      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: ${{ github.event_name == 'pull_request' && github.event.workflow_run.head_repository.full_name == github.repository}}
        with:
          files: "test-results/**/*.xml"
      - name: Report Test results to Mattermost
        uses: growse/xunit-mattermost-reporter@v1
        with:
          mattermostWebhookUrl: ${{ secrets.MATTERMOST_WEBHOOK }}
          xUnitTestPath: "test-results"
      - uses: actions/download-artifact@v2
        name: "Download OSS Espresso test coverage report"
        with:
          path: coverage/oss/
          name: oss-espresso-test-coverage
      - uses: actions/download-artifact@v2
        name: "Download GMS Espresso test coverage report"
        with:
          path: coverage/gms
          name: gms-espresso-test-coverage
      - uses: actions/download-artifact@v2
        name: "Download unit test coverage report"
        with:
          path: coverage/unit
          name: unit-test-coverage
      - uses: codecov/codecov-action@v1
        name: Upload espresso coverage to codecov
        with:
          files: coverage/gms/report.xml,coverage/oss/report.xml
          flags: uitests
      - uses: codecov/codecov-action@v1
        name: Upload unit coverage to codecov
        with:
          file: coverage/unit/jacoco.xml
          flags: unittests
  publish:
    name: Publish
    runs-on: macos-latest
    if: github.event_name != 'pull_request'
    needs:
      - build
      - unit-test
      - espresso-test-gms
      - espresso-test-oss
      - lint
    steps:
      - name: Check out code
        uses: actions/checkout@v1
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - uses: burrunan/gradle-cache-action@v1
        name: Gradle cache
        with:
          build-root-directory: project/
      - name: Decrypt secrets
        env:
          GOOGLE_CLOUD_SERVICE_ACCOUNT_CREDENTIALS: ${{ secrets.GOOGLE_CLOUD_SERVICE_ACCOUNT_CREDENTIALS }}
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
        run: |
          echo -n $GOOGLE_CLOUD_SERVICE_ACCOUNT_CREDENTIALS > project/app/owntracks-android-7a8e1517bde3.json
          echo -n $KEYSTORE_BASE64 | base64 -d > project/owntracks.release.keystore.jks
      - name: Publish play store bundle
        timeout-minutes: 10
        run: ./gradlew publishGmsReleaseBundle
        working-directory: project
        env:
          KEYSTORE_PASSPHRASE: ${{ secrets.KEYSTORE_PASSPHRASE }}
          ORG_GRADLE_PROJECT_google_maps_api_key: ${{ secrets.GOOGLE_MAPS_API_KEY }}
