# Builds, tests and publishes the output to the Play store internal track.
name: Android CI

on:
  push:
    branches:
      - master
    paths-ignore:
      - ".github/**"
      - "!.github/workflows/android.yml"
      - "*.md"
      - ".dependabot/**"
  pull_request:
    branches:
      - master
    paths-ignore:
      - ".github/**"
      - "!.github/workflows/android.yml"
      - "*.md"
      - ".dependabot/**"

jobs:
  test:
    name: Build & Test
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - uses: hmarr/debug-action@v2
    - name: set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - uses: actions/cache@v2
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ github.repository }}-${{ hashFiles('**/*.gradle*') }}
    - name: Build with Gradle
      run: ./gradlew assembleDebug
      working-directory: project
      timeout-minutes: 10
    - name: Run unit tests
      run: ./gradlew check jacocoTestGmsDebugUnitTestReport
      working-directory: project
      timeout-minutes: 10
    - name: Test with Gradle on the emulator
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 29
        working-directory: project
        script: |
            adb emu geo fix 0 51
            ./gradlew createGmsDebugCoverageReport createOssDebugCoverageReport --no-build-cache
        profile: pixel_3a
        target: google_apis
        disable-animations: true
        arch: x86_64
    - name: Gather xunit files into a single dir
      run: | 
          mkdir -p ./project/app/build/test-results/collected/
          cp -v ./project/app/build/test-results/testGmsDebugUnitTest/*.xml ./project/app/build/test-results/collected/ || true
          cp -v ./project/app/build/outputs/androidTest-results/connected/flavors/gmsDebugAndroidTest/*.xml ./project/app/build/test-results/collected/ || true
          cp -v ./project/app/build/outputs/androidTest-results/connected/flavors/ossDebugAndroidTest/*.xml ./project/app/build/test-results/collected/ || true
      if: always()
    - name: Upload unit test result artifact
      uses: actions/upload-artifact@v2
      with:
        name: unit-test-results
        path: project/app/build/test-results/testGmsDebugUnitTest
      if: always()
    - name: Upload connected test result artifact
      uses: actions/upload-artifact@v2
      with:
        name: test-reports
        path: project/app/build/reports/
      if: always()
    - name: Setup Python for unit test result publishing
      uses: actions/setup-python@v2
      with:
        python-version: 3
    - name: Publish Unit Test Results
      uses: EnricoMi/publish-unit-test-result-action@branch-composite-action
      if: ${{ github.event_name == 'pull_request' }}
      with:
        files: "./project/app/build/test-results/collected/*.xml"
    - name: Report Test results to Mattermost
      uses: growse/xunit-mattermost-reporter@v1
      with:
        mattermostWebhookUrl: ${{ secrets.MATTERMOST_WEBHOOK }}
        xUnitTestPath: "./project/app/build/test-results/collected/"
      if: ${{ github.event_name == 'push' }}
    - uses: codecov/codecov-action@v1
      name: Upload espresso coverage to codecov
      with:
        files: ./project/app/build/reports/coverage/gms/debug/report.xml,./project/app/build/reports/coverage/oss/debug/report.xml
        flags: uitests
    - uses: codecov/codecov-action@v1
      name: Upload unit coverage to codecov
      with:
        file: ./project/app/build/jacoco/jacoco.xml
        flags: unittests
  publish:
    name: Publish
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    needs: test
    steps:
      - name: Check out code
        uses: actions/checkout@v1
      - name: set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ github.repository }}-${{ hashFiles('**/*.gradle*') }}
      - name: Decrypt secrets
        env:
            GOOGLE_CLOUD_SERVICE_ACCOUNT_CREDENTIALS: ${{ secrets.GOOGLE_CLOUD_SERVICE_ACCOUNT_CREDENTIALS }}
            KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
        run: |
            echo -n $GOOGLE_CLOUD_SERVICE_ACCOUNT_CREDENTIALS > project/app/owntracks-android-7a8e1517bde3.json
            echo -n $KEYSTORE_BASE64 | base64 -d > project/owntracks.release.keystore.jks
      - name: Publish play store bundle
        timeout-minutes: 10
        run: ./gradlew publishGmsReleaseBundle
        working-directory: project
        env:
            KEYSTORE_PASSPHRASE: ${{ secrets.KEYSTORE_PASSPHRASE }}
            ORG_GRADLE_PROJECT_google_maps_api_key: ${{ secrets.GOOGLE_MAPS_API_KEY }}
