---
name: Build and Test

"on":
  push:
    paths:
      - ".github/workflows/build-and-test.yml"
      - "project/app/src/**"
      - "project/app/*.pro"
      - "project/buildSrc/src/**"
      - "project/*.gradle.kts"
      - "project/gradle/wrapper/gradle-wrapper.properties"
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-release:
    name: Build release
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"
      - name: Create keystore
        run: |
          echo -n $KEYSTORE_BASE64 | base64 -d > project/owntracks.release.keystore.jks
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
      - name: Gradle build
        uses: burrunan/gradle-cache-action@v1
        env:
          KEYSTORE_PASSPHRASE: ${{ secrets.KEYSTORE_PASSPHRASE }}
        with:
          build-root-directory: project
          gradle-dependencies-cache-key: |
            project/gradle/libs.versions.toml
          arguments: |
            --scan
            assembleDebug
            assembleRelease
            assembleAndroidTest
            assembleGmsReleaseUnitTest
            :app:compileOssReleaseSources
            :app:packageGmsReleaseBundle
            :app:assembleGmsDebugAndroidTest
            :app:assembleOssDebugAndroidTest
      - name: Upload apk artifact
        uses: actions/upload-artifact@v3
        with:
          name: apks
          path: |
            project/app/build/outputs/apk/oss/release/app-oss-release.apk
            project/app/build/outputs/apk/gms/release/app-gms-release.apk

  unit-test:
    name: Unit test
    needs: build-release
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"
      - name: Gradle build
        uses: burrunan/gradle-cache-action@v1
        with:
          build-root-directory: project
          gradle-dependencies-cache-key: |
            project/gradle/libs.versions.toml
          read-only: true
          arguments: |
            --scan
            jacocoTestGmsReleaseUnitTestReport
      - name: Upload lint report
        uses: actions/upload-artifact@v3
        with:
          name: unit-test-report
          path: project/app/build/test-results/testGmsReleaseUnitTest/

  ui-tests:
    name: UI tests
    needs: unit-test
    runs-on: macos-latest
    strategy:
      matrix:
        api-level: [31]
        flavor: ["gms", "oss"]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"
      - name: Gradle Cache
        uses: burrunan/gradle-cache-action@v1
        with:
          build-root-directory: project
          gradle-dependencies-cache-key: |
            project/gradle/libs.versions.toml
          read-only: true
      - name: Run UI Tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: google_apis
          script: ./gradlew create${FLAVOR^}DebugCoverageReport
          working-directory: project
        env:
          FLAVOR: ${{ matrix.flavor}}

  lint:
    name: Android lint
    needs: build-release
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"
      - name: Gradle build
        uses: burrunan/gradle-cache-action@v1
        with:
          build-root-directory: project
          gradle-dependencies-cache-key: |
            project/gradle/libs.versions.toml
          read-only: true
          arguments: |
            --scan
            lint
      - name: Upload lint report
        uses: actions/upload-artifact@v3
        with:
          name: lint-report
          path: project/app/build/reports/lint-results.html

  fdroid-scanner:
    name: F-Droid scanner
    runs-on: ubuntu-latest
    needs: build-release
    container:
      image: registry.gitlab.com/fdroid/docker-executable-fdroidserver:master
    steps:
      - name: Download APK
        uses: actions/download-artifact@v3
        with:
          name: apks
      - name: Scan OSS APK
        run: |
          /usr/local/bin/fdroid scanner oss/release/app-oss-release.apk
