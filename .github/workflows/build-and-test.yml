---
name: Build and Test

"on":
  push:
    paths:
      - ".github/workflows/build-and-test.yml"
      - "project/app/src/**"
      - "project/app/*.pro"
      - "project/buildSrc/src/**"
      - "project/*.gradle.kts"
      - "project/gradle/wrapper/gradle-wrapper.properties"
    branches:
      - master
      - gh-readonly-queue/master/**
  pull_request:
    branches:
      - master

# if: ${{ !github.event.pull_request.head.repo.fork && github.event.label && ( github.event.label.name == 'smoke-test-required' || github.event.label.name == 'integration-test-required') }}

jobs:
  build-test-lint:
    name: Build, test & lint
    runs-on: macos-latest
    permissions:
      contents: read
      checks: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"
      - name: Create keystore
        run: |
          echo -n $KEYSTORE_BASE64 | base64 -d > project/owntracks.release.keystore.jks
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
      - name: Gradle cache
        uses: gradle/gradle-build-action@v2
      - name: Gradle build
        run: |
          ./project/gradlew -p project \
            --scan \
              assembleDebug \
              assembleRelease \
              assembleAndroidTest \
              assembleGmsReleaseUnitTest \
              :app:compileOssReleaseSources \
              :app:packageGmsReleaseBundle \
              :app:assembleGmsDebugAndroidTest \
              :app:assembleOssDebugAndroidTest
        env:
          KEYSTORE_PASSPHRASE: ${{ secrets.KEYSTORE_PASSPHRASE }}

      - name: Upload apk artifact
        uses: actions/upload-artifact@v3
        with:
          name: apks
          path: |
            project/app/build/outputs/apk/oss/release/app-oss-release.apk
            project/app/build/outputs/apk/gms/release/app-gms-release.apk

      - name: Unit Test
        run: ./project/gradlew -p project app:createGmsDebugUnitTestCoverageReport
      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          files: ./project/app/build/reports/coverage/test/gms/debug/report.xml
          flags: unittests

      - name: JUnit Report Action
        uses: mikepenz/action-junit-report@v3
        if: always()
        with:
          report_paths: "**/build/test-results/test*UnitTest/TEST-*.xml"

      - name: Lint
        run: ./project/gradlew -p project lint

      - name: Upload lint report
        uses: actions/upload-artifact@v3
        with:
          name: lint-report
          path: project/app/build/reports/lint-results-gmsDebug.html

  fdroid-scanner:
    name: F-Droid scanner
    runs-on: ubuntu-latest
    needs: build-test-lint
    container:
      image: registry.gitlab.com/fdroid/docker-executable-fdroidserver:master
    steps:
      - name: Download APK
        uses: actions/download-artifact@v3
        with:
          name: apks
      - name: Scan OSS APK
        run: |
          . /etc/profile.d/bsenv.sh && GRADLE_USER_HOME=${home_vagrant}/.gradle ${fdroidserver}/fdroid scanner oss/release/app-oss-release.apk

  espresso-test:
    name: "Espresso test"
    runs-on: macos-latest
    needs: build-test-lint
    strategy:
      matrix:
        android-api: [31]
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: 17

      - name: Gradle cache
        uses: gradle/gradle-build-action@v2

      - name: AVD cache
        uses: actions/cache@v3
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.android-api }}

      - name: create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.android-api }}
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          profile: pixel_3a
          target: google_apis
          ram-size: 3096M
          disable-animations: true
          arch: x86_64
          sdcard-path-or-size: 1000M
          script: echo "Generated AVD snapshot for caching."

      - name: Espresso Test
        uses: reactivecircus/android-emulator-runner@v2
        timeout-minutes: 60
        with:
          api-level: ${{ matrix.android-api }}
          force-avd-creation: false
          script: |
            adb uninstall org.owntracks.android || echo "org.owntracks.android not installed"
            adb uninstall org.owntracks.android.test || echo "org.owntracks.android.test not installed"
            ./project/gradlew -p project createGmsDebugCoverageReport --scan   -Pandroid.testInstrumentationRunnerArguments.annotation=org.owntracks.android.testutils.SmokeTest
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          profile: pixel_3a
          target: google_apis
          ram-size: 3096M
          disable-animations: true
          arch: x86_64
          sdcard-path-or-size: 1000M

      - name: Upload connected test result artifact
        uses: actions/upload-artifact@v3
        with:
          name: espresso-test-reports-${{ matrix.android-api }}
          path: ./project/app/build/reports/androidTests/connected/
        if: always()
      - name: Upload connected test coverage artifact
        uses: actions/upload-artifact@v3
        with:
          name: espresso-test-coverage-${{ matrix.android-api }}
          path: ./project/app/build/reports/coverage/androidTest/
        if: always()
