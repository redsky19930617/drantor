---
name: Build and Test

"on":
  push:
    paths:
      - ".github/workflows/build-and-test.yml"
      - "project/app/src/**"
      - "project/app/*.pro"
      - "project/buildSrc/src/**"
      - "project/*.gradle.kts"
      - "project/gradle/wrapper/gradle-wrapper.properties"
    branches:
      - master
      - gh-readonly-queue/master/**
  pull_request:
    branches:
      - master

jobs:
  build-test-lint:
    name: Build release
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"
      - name: Create keystore
        run: |
          echo -n $KEYSTORE_BASE64 | base64 -d > project/owntracks.release.keystore.jks
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
      - name: Gradle build
        uses: burrunan/gradle-cache-action@v1
        env:
          KEYSTORE_PASSPHRASE: ${{ secrets.KEYSTORE_PASSPHRASE }}
        with:
          build-root-directory: project
          gradle-dependencies-cache-key: |
            project/gradle/libs.versions.toml
          arguments: |
            --scan
            assembleDebug
            assembleRelease
            assembleAndroidTest
            assembleGmsReleaseUnitTest
            :app:compileOssReleaseSources
            :app:packageGmsReleaseBundle
            :app:assembleGmsDebugAndroidTest
            :app:assembleOssDebugAndroidTest
            jacocoTestGmsReleaseUnitTestReport
            lint
      - name: Upload apk artifact
        uses: actions/upload-artifact@v3
        with:
          name: apks
          path: |
            project/app/build/outputs/apk/oss/release/app-oss-release.apk
            project/app/build/outputs/apk/gms/release/app-gms-release.apk
      - name: Upload lint report
        uses: actions/upload-artifact@v3
        with:
          name: lint-report
          path: project/app/build/reports/lint-results.html
      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          files: ./project/app/build/jacoco/jacoco.xml
          flags: unittests
      - name: JUnit Report Action
        uses: mikepenz/action-junit-report@v3
        if: success() || failure() # always run even if the previous step fails
        with:
          report_paths: "**/build/test-results/test*ReleaseUnitTest/TEST-*.xml"

  fdroid-scanner:
    name: F-Droid scanner
    runs-on: ubuntu-latest
    needs: build-test-lint
    container:
      image: registry.gitlab.com/fdroid/docker-executable-fdroidserver:master
    steps:
      - name: Download APK
        uses: actions/download-artifact@v3
        with:
          name: apks
      - name: Scan OSS APK
        run: |
          /usr/local/bin/fdroid scanner oss/release/app-oss-release.apk
