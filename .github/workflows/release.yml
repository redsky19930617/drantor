# This flow is designed to be used to update the production and beta tracks on the Play store. It does this by promoting the beta track build to production, triggered by the creation of a release tag.
# As per the beta build, this does not actually do a build / upload, it simply promotes whatever's in beta to production. Best to create the
name: Android Release

on:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+
      - v[0-9]+.[0-9]+.[0-9]+-beta[0-9]+

jobs:
  release:
    name: Create GH release and promote Play store beta to release
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - uses: octokit/request-action@v2.x
        name: Find beta tags
        id: get_beta_tags
        with:
          route: GET /repos/owntracks/android/git/matching-refs/tags/${{ github.ref }}-beta
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Get number of matching tags
        id: tagCount
        env:
          labels: ${{ steps.get_beta_tags.outputs.data }}
        run: |
          echo $labels
          export LENGTH=$(echo $labels | jq '. | length')
          echo $LENGTH
          echo "::set-output name=beta_tag_count::$LENGTH"

      - name: set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: "temurin"

      - name: Decrypt secrets
        env:
          GOOGLE_CLOUD_SERVICE_ACCOUNT_CREDENTIALS: ${{ secrets.GOOGLE_CLOUD_SERVICE_ACCOUNT_CREDENTIALS }}
        run: |
          echo -n $GOOGLE_CLOUD_SERVICE_ACCOUNT_CREDENTIALS > project/app/owntracks-android-gcloud-creds.json

      - name: Fetch APK from CircleCI
        run: .github/workflows/fetch-apks.sh
        env:
          CIRCLE_CI_TOKEN: "${{ secrets.CIRCLE_CI_TOKEN }}"

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          body_path: ./CHANGELOG.md
          release_name: ${{ github.ref }}
          draft: true
          prerelease: ${{ contains(github.ref, 'beta') }}

      - name: Upload GMS Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./gms.apk
          asset_name: owntracks-release-gms.apk
          asset_content_type: application/vnd.android.package-archive
      - name: Upload OSS Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./oss.apk
          asset_name: owntracks-release-oss.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Promote play store beta from internal
        run: ./gradlew promoteGmsReleaseArtifact --from-track internal --promote-track beta --release-status completed
        working-directory: project
        if: ${{ contains(github.ref, 'beta') }}
      - name: Promote play store production from beta
        run: ./gradlew promoteArtifact --from-track beta --promote-track production --release-status completed
        working-directory: project
        if: ${{ !contains(github.ref, 'beta') && steps.tagCount.outputs.beta_tag_count > 0 }}
      - name: Promote play store production from internal
        run: ./gradlew promoteArtifact --from-track internal --promote-track production --release-status completed
        working-directory: project
        if: ${{ !contains(github.ref, 'beta') && steps.tagCount.outputs.beta_tag_count == 0 }}
