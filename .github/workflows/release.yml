# This flow is designed to be used to update the production track on the Play store. It does this by promoting the beta track build to production, triggered by the creation of a release tag.
# As per the beta build, this does not actually do a build / upload, it simply promotes whatever's in beta to production. Best to create the 
name: Android CI production release

on:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+

jobs:
  release:
    name: Create GH release and promote Play store beta to release
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: octokit/request-action@v2.x
      name: Find beta tags
      id: get_beta_tags
      with:
        route: GET /repos/owntracks/android/git/matching-refs/tags/${{ github.ref }}-beta
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Get number of matching tags
      id: tagCount
      env:
        labels: ${{ steps.get_beta_tags.outputs.data }}
      run: |
        echo $labels
        export LENGTH=$(echo $labels | jq '. | length')
        echo $LENGTH
        echo "::set-output name=beta_tag_count::$LENGTH"
    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        body_path: ./CHANGELOG.md
        release_name: ${{ github.ref }}
        draft: true
        prerelease: false
    - name: set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - uses: actions/cache@v2
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    - name: Decrypt secrets
      env:
        GOOGLE_CLOUD_SERVICE_ACCOUNT_CREDENTIALS: ${{ secrets.GOOGLE_CLOUD_SERVICE_ACCOUNT_CREDENTIALS }}
        KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
      run: |
        echo -n $GOOGLE_CLOUD_SERVICE_ACCOUNT_CREDENTIALS > project/app/owntracks-android-gcloud-creds.json
        echo -n $KEYSTORE_BASE64 | base64 -d > project/owntracks.release.keystore.jks
    - name: Build APK
      run: ./gradlew clean :app:getLatestVersionCodeMinusOne assembleRelease
      working-directory: project
      env:
        KEYSTORE_PASSPHRASE: ${{ secrets.KEYSTORE_PASSPHRASE }}
        ORG_GRADLE_PROJECT_google_maps_api_key: ${{ secrets.GOOGLE_MAPS_API_KEY }}
        MAKE_APK_SAME_VERSION_CODE_AS_GOOGLE_PLAY: yes
    - name: Upload GMS Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./project/app/build/outputs/apk/gms/release/app-gms-release.apk
        asset_name: owntracks-release-gms.apk
        asset_content_type: application/vnd.android.package-archive
    - name: Upload OSS Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./project/app/build/outputs/apk/oss/release/app-oss-release.apk
        asset_name: owntracks-release-oss.apk
        asset_content_type: application/vnd.android.package-archive
    - name: Promote play store production from beta
      run: ./gradlew promoteArtifact --from-track beta --promote-track production --release-status completed
      working-directory: project
      if: ${{ steps.tagCount.outputs.beta_tag_count > 0 }}
    - name: Promote play store production from internal
      run: ./gradlew promoteArtifact --from-track internal --promote-track production --release-status completed
      working-directory: project
      if: ${{ steps.tagCount.outputs.beta_tag_count == 0 }}
