// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven { url 'https://maven.fabric.io/public' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.5.0'

        classpath 'io.fabric.tools:gradle:1.+'

    }
}

apply plugin: 'com.android.application'

apply plugin: 'io.fabric'

repositories {
    mavenCentral()

    maven { url 'https://repo.eclipse.org/content/repositories/paho-releases/' }
    maven { url 'http://jcenter.bintray.com'}
    maven { url 'https://maven.fabric.io/public' }
    maven { url "https://jitpack.io" }

    flatDir {
        dirs 'libs'
    }
}

dependencies {
    // Support libraries
    compile 'com.android.support:support-v4:23.1.1'
    compile 'com.android.support:appcompat-v7:23.1.1'
    compile 'com.android.support:design:23.1.1'
    compile 'com.android.support:recyclerview-v7:23.1.1'

    // Play Services libraries
    compile 'com.google.android.gms:play-services-maps:8.4.0'
    compile 'com.google.android.gms:play-services-location:8.4.0'
    compile 'com.google.android.gms:play-services-base:8.4.0'

    // Utility libraries
    compile 'de.greenrobot:eventbus:2.4.0'
    compile 'de.greenrobot:greendao:1.3.7'
    //compile ('com.estimote:sdk:0.9.4@aar') { transitive = true; }
    compile 'org.altbeacon:android-beacon-library:2.7.1@aar'
    compile 'ch.hsr:geohash:1.1.0'
    compile 'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.0.2'
    compile 'org.fusesource.mqtt-client:mqtt-client:1.11'
    compile('com.crashlytics.sdk.android:crashlytics:+@aar') { transitive = true; }
    compile('com.fasterxml.jackson.core:jackson-core:2.6.2')
    compile('com.fasterxml.jackson.core:jackson-databind:2.6.2')
    compile 'com.nostra13.universalimageloader:universal-image-loader:1.9.5'

    compile 'me.tatarka.bindingcollectionadapter:bindingcollectionadapter:1.0.0'
    compile 'me.tatarka.bindingcollectionadapter:bindingcollectionadapter-recyclerview:1.0.0'
    compile ('com.mapbox.mapboxsdk:mapbox-android-sdk:0.7.4@aar'){
        transitive=true
    }

    // Widget libraries
    compile 'com.github.curioustechizen.android-ago:library:1.3.0'
    compile 'com.rengwuxian.materialedittext:library:2.1.4'
    compile('com.mikepenz:materialdrawer:4.6.2@aar')
    compile('com.mikepenz:materialize:0.5.1@aar') // dependency for materialdrawer that is somehow not included automatically
    compile('com.mikepenz:iconics-core:2.5.1@aar') // dependency for materialdrawer that is somehow not included automatically
    compile('com.mikepenz:google-material-typeface:2.2.0.1@aar')


    compile 'com.afollestad:material-dialogs:0.7.5.2'
    compile 'com.joanzapata.android:android-iconify:1.0.10'
    //compile 'com.github.monxalo:android-section-adapter:1.0.1@jar'
    compile 'com.obsez.android.lib.filechooser:filechooser:1.1.2'
    compile 'com.amulyakhare:com.amulyakhare.textdrawable:1.0.1'

}

android {

    signingConfigs {
        debug {
            keyAlias 'debug.owntracks.org'
            keyPassword '__DEBUG__'
            storeFile file('./debug-keystore.jks')
            storePassword '__DEBUG__'
        }
    }
    compileSdkVersion 23
    buildToolsVersion '23.0.2'
    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 23
        multiDexEnabled true
    }
    dataBinding {
        enabled = true
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
        }
    }
    buildTypes {
        release {
            ext.enableCrashlytics = true
            minifyEnabled false
            zipAlignEnabled true
        }
        debug {
            ext.enableCrashlytics = false
            minifyEnabled false
        }
    }

    // Fixes bug in Data Binding library that generates intermediates at a wrong location
    applicationVariants.all { variant ->
        def variantName = variant.name.capitalize()
        def inputDir    = "${buildDir}/intermediates/classes/${variant.dirName}"
        def sourceDir   = "${buildDir}/generated/source/dataBinding/${variant.dirName}"
        def copyTask    = tasks.create(name: "dataBindingFix${variantName}", type: Copy) {
            from inputDir
            into sourceDir
            include '**/*.java'
        }
        tasks["generate${variantName}Sources"].dependsOn copyTask
        variant.addJavaSourceFoldersToModel new File(sourceDir)
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'

    }
    dexOptions {
        preDexLibraries = false
    }

}

def crashlyticsUploadStoredDeobsDebug = "crashlyticsUploadStoredDeobsDebug"
def crashlyticsUploadDeobsDebug = "crashlyticsUploadDeobsDebug"
tasks.whenTaskAdded { task ->
    if (crashlyticsUploadStoredDeobsDebug.equals(task.name) ||
            crashlyticsUploadDeobsDebug.equals(task.name)) {

        println "Disabling $task.name."
        task.enabled = false
    }
}
